services:
  broker:
    image: apache/kafka:latest
    container_name: broker
    ports:
      - "9092:9092"
    healthcheck:
      test: ["CMD-SHELL", "bash -c '/opt/kafka/bin/kafka-broker-api-versions.sh --bootstrap-server localhost:9092 > /dev/null 2>&1'"]
      start_period: 15s
      interval: 5s
      timeout: 3s
      retries: 10

    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: >-
        INTERNAL://0.0.0.0:29092,
        EXTERNAL://0.0.0.0:9092,
        CONTROLLER://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: >-
        INTERNAL://broker:29092,
        EXTERNAL://localhost:9092,
        CONTROLLER://broker:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: >-
        INTERNAL:PLAINTEXT,
        EXTERNAL:PLAINTEXT,
        CONTROLLER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@broker:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3

  topic-init:
    image: apache/kafka:latest
    container_name: topic-init
    depends_on:
      broker:
        condition: service_healthy
    entrypoint: ["/bin/bash", "-c"]
    command: >
      "/opt/kafka/bin/kafka-topics.sh --create --if-not-exists --bootstrap-server broker:29092 --topic raw-data --partitions 4 --replication-factor 1 &&
       /opt/kafka/bin/kafka-topics.sh --create --if-not-exists --bootstrap-server broker:29092 --topic mined-blocks --partitions 1 --replication-factor 1"

  kafka-bomber:
    image: apache/kafka:latest
    volumes:
      - ./spam.sh:/spam.sh
    entrypoint: ["/bin/bash", "/spam.sh"]
    depends_on: []
    restart: "no"
    deploy:
      replicas: 0

  kafka-ui:
    image: provectuslabs/kafka-ui
    ports:
      - "8080:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=broker:29092
    depends_on:
      broker:
        condition: service_healthy
  miner:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: cpp-miner
    depends_on:
      broker:
        condition: service_healthy
      topic-init:
        condition: service_completed_successfully
    volumes:
      - ./out:/app/out
    networks:
      - default
    stdin_open: true
    tty: true
    restart: on-failure

  mosquitto:
    image: eclipse-mosquitto:latest
    ports:
      - "1883:1883"
    volumes:
      - ./mosquitto.conf:/mosquitto/config/mosquitto.conf
    networks:
      - default
    healthcheck:
      test: ["CMD-SHELL", "nc -z localhost 1883 || exit 1"]
      start_period: 5s
      interval: 10s
      timeout: 5s
      retries: 5


  mqtt-kafka-bridge:
    build:
      context: ./mqtt-kafka-bridge
      dockerfile: Dockerfile
    depends_on:
      mosquitto:
        condition: service_healthy
      broker:
        condition: service_healthy
    networks:
      - default
    restart: on-failure

  sse-server:
    build:
      context: ./interface/back
      dockerfile: Dockerfile
    container_name: sse-server
    depends_on:
      broker:
        condition: service_healthy
      topic-init:
        condition: service_completed_successfully
    ports:
      - "8000:8000"
    volumes:
      - ./out:/app/out
    networks:
      - default
    restart: on-failure

  nginx:
    container_name: nginx
    build:
      context: ./interface
      dockerfile: ./nginx/Dockerfile
    ports:
      - "8081:80"
    networks:
      - default
    depends_on:
      broker:
        condition: service_healthy
      topic-init:
        condition: service_completed_successfully
    restart: on-failure